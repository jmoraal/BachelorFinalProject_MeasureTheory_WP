{
  "exerciseSheet": false,
  "blocks": [
    {
      "type": "text",
      "text": "# Continuity of measure\nAn extremely important result in measure theory is the continuity of measures. There are multiple formulations and variants to state it. The one that we aim to prove in this notebook is continuity from below, that is, continuity of measure for an increasing sequence of sets. This result is used over and over in measure theory, and for example forms the basis of the monotone convergence theorem. \n\nThe proof can roughly be divided into four parts, of which only the last two involve measures; the first two are purely set-theoretical.  \nFirst, we show that a σ-algebra is closed under taking finite unions. Next, we prove some more properties of the disjoint sequence also used in the proof of the π-λ theorem. Then we show that measures are finitely additive and finally, we use all prior results to prove our main result, the lemma `incr_cont_meas`. \n\nTo start, after importing some libraries we state the definitions of σ-additivity, a measure and a probability measure. "
    },
    {
      "type": "code",
      "text": "Require Import ClassicalFacts. \nRequire Import Coq.Arith.Wf_nat. \nRequire Import Logic. \nRequire Import Omega. \nRequire Import Reals.\nRequire Import Sets.Classical_sets.\nRequire Import Sets.Ensembles.\nRequire Import Sets.Powerset.\nRequire Import wplib.Lib.measure_theory.\nRequire Import wplib.Lib.sets.\nRequire Import wplib.Notations.SetNotations.\nRequire Import wplib.Tactics.Tactics.\nRequire Import wplib.Tactics.TacticsContra.\n\nNotation \"'U'\" := SetNotations.U.\n(*We may not want this, but otherwise notations \n  such as Ω and ∅ do not work. How to fix? *)\n  \nVariable F : setOfSubsets U. \n\nDefinition σ_additive_on F (μ : (subset U ⇨ ℝ)) : Prop := \n  ∀C : (ℕ → (subset U)), (∀n : ℕ, C n ∈ F) \n    ⇒ (∀ m n : ℕ, m ≠ n ⇒ Disjoint _ (C m) (C n)) \n      ⇒ infinite_sum (fun (n:ℕ) ↦ (μ (C n))) (μ (Countable_union C)).\n(*infinite_sum fn l is the proposition 'the sum of all terms of fn converges to l'*)\n\nNotation \"μ is_σ-additive_on F\" := \n  (σ_additive_on F μ) (at level 50). \n\nDefinition is_measure_on F (μ : (subset U → ℝ)) : Prop := \n  is_σ_algebra F ∧ μ ∅ = 0 ∧ μ is_σ-additive_on F.\n\nDefinition is_probability_measure_on F (μ : (subset U → ℝ)) \n  : Prop := \n    is_measure_on F μ ∧ μ Ω = 1."
    },
    {
      "type": "text",
      "text": "## Finite unions in σ-algebras\n\nAt several points of the upcoming proofs, we use finite unions. The following lemmas are similar to ones in the π-λ theorem proof, but are now stated for a σ-algebra, $F$. We want to prove that the finite union of elements of $F$ is again an element of $F$. For this, we first need two lemmas:"
    },
    {
      "type": "code",
      "text": "\nLemma empty_in_σ : \n  F is_a_σ-algebra ⇒ ∅ ∈ F. \n\nProof.  \nAssume F_is_σ_algebra. \nBy complement_full_is_empty it holds that \n  (∅ = (Ω \\ Ω)) (comp_full_empty).\nWrite goal using (∅ = (Ω \\ Ω)) as ((Ω \\ Ω) ∈ F). \nIt holds that ((Ω \\ Ω) ∈ F). \nQed.  \n\n\nLemma unions_in_σ : \n  F is_a_σ-algebra\n    ⇒  ∀ A B : subset U, A ∈ F ∧ B ∈ F\n      ⇒ A ∪ B ∈ F.\n\nProof. \nAssume F_is_σ_algebra. \nTake A B : (subset U). \nAssume A_and_B_in_F. \n\nWe claim that (∀ n : ℕ, aux_seq A B n ∈ F) (all_aux_in_F). \nTake n : ℕ. \nWe prove by induction on n. \nIt holds that (aux_seq A B 0 ∈ F). \nWe prove by induction on n. \nIt holds that (aux_seq A B 1 ∈ F). \nWrite goal using (aux_seq A B (S (S n)) = ∅) \n  as (∅ ∈ F). \nBy empty_in_σ it holds that \n  (∅ ∈ F) (empty_in_F).\nApply empty_in_F.  \n\nBy CU_aux_is_union it holds that \n  (A ∪ B = Countable_union (aux_seq A B)) (union_to_CU). \nWrite goal using (A ∪ B = Countable_union (aux_seq A B))\n  as (Countable_union (aux_seq A B) ∈ F).\nIt holds that (Countable_union (aux_seq A B) ∈ F). \nQed.\n\n"
    },
    {
      "type": "text",
      "text": "These two lemmas will help us prove that if $F$ is a σ-algebra, it is closed under taking countable unions: "
    },
    {
      "type": "code",
      "text": "Lemma FU_in_σ : \n  F is_a_σ-algebra\n    ⇒ ∀ C : (ℕ → (subset U)), (∀ n : ℕ, (C n) ∈ F) \n      ⇒ ∀ n : ℕ, (finite_union_up_to C n) ∈ F.\n\nProof. \nAssume F_is_σ.  \nTake C : (ℕ ⇨ subset U). \nAssume all_Cn_in_F.\nTake n : ℕ. \nWe prove by induction on n.\n(* Base case: *)\nBy FU_up_to_0_empty it holds that \n  (finite_union_up_to C 0 = ∅) (FU0_is_empty). \nWrite goal using (finite_union_up_to C 0 = ∅) \n  as (∅ ∈ F). \nApply empty_in_σ; Apply F_is_σ. \n(* Induction step: *)\nBy FU_S_as_union it holds that \n  (finite_union_up_to C (S n) \n    = (finite_union_up_to C n) ∪ (C n)) (FU_union).  \nWrite goal using \n  (finite_union_up_to C (S n) \n    = (finite_union_up_to C n) ∪ (C n)) \n      as ((finite_union_up_to C n) ∪ (C n) ∈ F).\nBy all_Cn_in_F it holds that (C n ∈ F) (Cn_in_F). \nBy unions_in_σ it holds that \n  ((finite_union_up_to C n ∪ C n) ∈ F) (xx); Apply xx. \nQed. "
    },
    {
      "type": "text",
      "text": "## The disjoint sequence\nAs mentioned before, the disjoint sequence `disjoint_seq` as defined in the `sets` library will play an important role in this proof. But of course we can only use it properly if, given a sequence of non-disjoint sets in $F$, all of the elements of the sequence it represents are in $F$ as well. This is what we prove in the next five lemmas. After that, we show what the union of the first $n$ elements of the disjoint sequence turns out to be. \n\n### σ-algebras and the disjoint sequence\nThe first two show that $F$ is closed under taking intersections: the first one rewrites the intersection of two sets to a combination of a union and complements of these sets, the second uses properties of a σ-algebra to show that for $A$ and $B$ in $F$, the result is again in $F$. "
    },
    {
      "type": "code",
      "text": "Lemma intersection_to_complement : \n   ∀ A B : subset U, \n    A ∩ B = Ω \\ ((Ω \\ A) ∪ (Ω \\ B)). \n\nProof. \nTake A B : (subset U). \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_lhs. \ndestruct x_in_lhs. \nBy H it holds that (x ∉ Ω \\ A) (x_not_in_A). \nBy H0 it holds that (x ∉ Ω \\ B) (x_not_in_comp). \n\nWe claim that (x ∉ (Ω \\ A) ∪ (Ω \\ B)) (x_not_in_AB).\nWe argue by contradiction. \nWe claim that (x ∈ (Ω \\ A) ∪ (Ω \\ B)) (x_in_AB).\nApply NNPP; Apply H1.   \ndestruct x_in_AB. \nContradiction.\nContradiction. \nIt follows that (x ∈ Ω \\ ((Ω \\ A) ∪ (Ω \\ B))). \n\nTake x : U; Assume x_in_rhs. \ndestruct x_in_rhs.\nBy H0 it holds that \n  ((x ∉ Ω \\ A) ∧ (x ∉ Ω \\ B)) (x_not_in_int_comp). \nBecause x_not_in_int_comp \n  both x_not_in_compA and x_not_in_compB.\nWe claim that (x ∈ A) (x_in_A).\nWe argue by contradiction. \nBy H1 it holds that (x ∈ Ω \\ A) (x_in_compA).\nContradiction.  \n\nWe claim that (x ∈ B) (x_in_B).\nWe argue by contradiction. \nBy H1 it holds that (x ∈ Ω \\ B) (x_in_compB).\nContradiction. \nIt follows that (x ∈ A ∩ B). \nQed.  \n\nLemma intersections_in_σ : \n  F is_a_σ-algebra \n    ⇒  ∀ A B : subset U, A ∈ F ∧ B ∈ F\n      ⇒ A ∩ B ∈ F.\n\nProof. \nAssume F_is_σ_algebra. \nTake A B : (subset U). \nAssume A_and_B_in_F. \nBy intersection_to_complement it holds that \n  (A ∩ B = Ω \\ ((Ω \\ A) ∪ (Ω \\ B))) (int_is_comp). \nWrite goal using (A ∩ B = Ω \\ ((Ω \\ A) ∪ (Ω \\ B)))\n  as (Ω \\ ((Ω \\ A) ∪ (Ω \\ B)) ∈ F). \nBy unions_in_σ it holds that \n ((Ω \\ A) ∪ (Ω \\ B) ∈ F) (compA_compB_in_F). \nIt follows that (Ω \\ ((Ω \\ A) ∪ (Ω \\ B)) ∈ F).\nQed.\n\n"
    },
    {
      "type": "text",
      "text": "These now serve to prove that $F$ is also closed under taking complements. We need one more lemma for this, which rewrites the complement of a set with respect to another set. "
    },
    {
      "type": "code",
      "text": "\nLemma complement_as_intersection : \n  ∀ A B : subset U, \n    A \\ B = (Ω \\ B) ∩ A. \n\nProof. \nTake A B : (subset U). \nWe prove equality by proving two inclusions. \n\nTake x : U. \nAssume x_in_A_without_B. \nIt holds that (x ∈ ((Ω \\ B) ∩ A)). \n\nTake x : U. \nAssume x_in_rhs. \nBy x_in_rhs it holds that \n  (x ∈ (Ω \\ B) ∧ (x ∈ A)) (x_in_A_and_comp_B). \nIt holds that (x ∈ (A \\ B)). \nQed. \n\n\nLemma complements_in_σ : \n  F is_a_σ-algebra\n    ⇒ ∀ A B : subset U, A ∈ F ∧ B ∈ F\n      ⇒ A \\ B ∈ F. \n\nProof. \nAssume F_is_σ.\nTake A B : (subset U). \nAssume A_and_B_in_F. \nBy F_is_σ it holds that \n  (Ω \\ B ∈ F) (comp_B_in_F). \nBy intersections_in_σ it holds that \n  ((Ω \\ B) ∩ A ∈ F) (set_in_F). \nBy complement_as_intersection it holds that \n  (A \\ B = (Ω \\ B) ∩ A) (set_is_complement). \nWrite goal using (A \\ B = ((Ω \\ B) ∩ A)) \n  as (((Ω \\ B) ∩ A) ∈ F). \nIt holds that ((Ω \\ B) ∩ A ∈ F). \nQed. \n\n"
    },
    {
      "type": "text",
      "text": "Now, we can show what we set out to do this section, which is that al elements of the sequence constructed from the definition `disjoint_seq` are in $F$:"
    },
    {
      "type": "code",
      "text": "\nLemma disj_seq_in_F : \n  F is_a_σ-algebra \n    ⇒ ∀C : (ℕ → (subset U)), is_increasing_seq_sets C\n      ⇒ (∀ n : ℕ, C n ∈ F)\n        ⇒ (∀n : ℕ, (disjoint_seq C) n ∈ F). \n\nProof. \nAssume F_is_σ. \nTake C : (ℕ ⇨ subset U) . \nAssume C_is_incr_seq.\nAssume all_Cn_in_F.\nDefine D := (disjoint_seq C). \n\nTake n : ℕ. \nWe need to show that (C n \\ (finite_union_up_to C n) ∈ F).\nWe claim that ((finite_union_up_to C n) ∈ F) (FU_in_F). \nApply FU_in_σ.\nApply F_is_σ. \nApply all_Cn_in_F. \nIt holds that (C n ∈ F) (Cn_in_F).\nBy complements_in_σ it holds that \n  (C n \\ finite_union_up_to C n ∈ F) (xx); Apply xx.\nQed. "
    },
    {
      "type": "text",
      "text": "### Finite unions of the disjoint sequence\nA useful consequence of the construction of a disjoint sequence using `disjoint_seq` is that, when given some sequence of sets $(C_n)$, the union of the first $n$ elements of this sequence is equal to the set $C_n$ itself. This will come in handy during our final proof, when rewriting the measure of some set $C_n$ to a sum of measures of disjoint sets. "
    },
    {
      "type": "code",
      "text": "Lemma FUn_disj_is_Cn : \n  ∀C : (ℕ → (subset U)), is_increasing_seq_sets C\n    ⇒ ∀ n : ℕ, finite_union_up_to (disjoint_seq C) (S n) = C n.\n\nProof. \nTake C : (ℕ ⇨ subset U) . \nAssume C_is_incr_seq.\nDefine D := (disjoint_seq C). \nTake n : ℕ. \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_FU. \nChoose n0 such that x_in_Dn0 according to x_in_FU. \nBy x_in_Dn0 it holds that \n  (x ∈ C n0) (x_in_Cn0).\n(*It holds that ((n0 < n)%nat) (n0_l_n). \nBy l_equiv it holds that \n  (n0 = (n - 1)%nat ∨ (n < n - 1)%nat) (n0_eq_l_n1).*) \nBy increasing_seq_mn it holds that \n  (C n0 ⊂ C n) (Cn0_subs_Cn). \nIt follows that (x ∈ C n). \n\nTake x : U; Assume x_in_C.\nDefine aux_prop := (fun (n : ℕ) ↦ (x ∈ C n)). (*n-1?*)\nBy classic it holds that \n  (∀ n, aux_prop n ∨ ¬aux_prop n) (aux_prop_decidable). \nBy dec_inh_nat_subset_has_unique_least_element it holds that\n  (has_unique_least_element le aux_prop) (exists_least_n). \nChoose n1 such that x_in_C_minimal_n according to exists_least_n. \nIt holds that ( aux_prop n1 \n  ∧ ( ∀ n2 : ℕ, aux_prop n2 \n    ⇒ (n1 ≤ n2)%nat)) (aux_n1_and_n1_le_n2).\nBecause aux_n1_and_n1_le_n2 both aux_n1 and n1_le_n2. \nIt holds that (x ∈ D n1) (x_in_Dn1). \nWe claim that ( (n1 < S n)%nat ) (n1_l_n).\nBy x_in_C it holds that (aux_prop n) (aux_n_min_1). \nBy n1_le_n2 it holds that \n  ((n1 ≤ n)%nat) (n1_leq_n_min_1). \nIt holds that \n  ((n1 < S n)%nat). \n  \nIt holds that (∃i : ℕ,  \n  ((i < (S n))%nat ∧ x ∈ (D i))) (exists_i). \nIt follows that (x ∈ finite_union_up_to D (S n)).\nQed."
    },
    {
      "type": "text",
      "text": "## Finite additivity of measure\nFinally, we turn to measures. For our continuity proof at the end of this document, we need the property of finite additivity of measures. We now prove this in two steps: first, we show that for disjoint sets $A, B ∈ F$, we have that $μ(A∪B) = μ(A) + μ(B)$. Then, by induction, we show that this holds for an arbitrary number of mutually disjoint sets.\n\n### Additivity of measure\nWe again make use of the auxiliary sequence (denoted by $C$ here) that was also used, among others, to show that σ-algebras are closed under taking the union of two sets. In the same way that we went from closedness under countable union to closedness under 'regular' union, we now go from σ-additivity to  additivity. \n\nFor this, we first show that we may evaluate a measure on $F$ in $A$ and $B$ if both are in $F$ and if they are disjoint; this enables us to apply the σ-additivity property of the measure to show that $\\sum_{n=0}^{∞} μ(C_n) = μ \\left(∪_{n=0}^{∞} C_n \\right)$:"
    },
    {
      "type": "code",
      "text": "\nLemma aux_additive : \n  ∀μ : (subset U → ℝ), is_measure_on F μ \n    ⇒ ∀ A B : subset U, A ∈ F ⇒ B ∈ F\n      ⇒ Disjoint _ A B  \n         ⇒ (infinite_sum (fun (n:ℕ) ↦ (μ ((aux_seq A B) n))) \n  (μ (Countable_union (aux_seq A B)))).\n\nProof. \nTake μ : (subset U ⇨ ℝ). \nAssume μ_is_measure_on_F. \nTake A B : (subset U). \nAssume A_in_F; Assume B_in_F.\nAssume A_B_disjoint.\nDefine C := (aux_seq A B).\nBy μ_is_measure_on_F it holds that \n  (μ is_σ-additive_on F) (add_on_F).\nApply add_on_F.\nTake n : ℕ. \nWe prove by induction on n.\nIt holds that (C 0%nat ∈ F).\nWe prove by induction on n.\nIt holds that (C 1%nat ∈ F).\n\nIt holds that (C (S (S n)) = ∅) (CSS_empty). \nBy empty_in_σ it holds that \n  (C (S (S n)) ∈ F) (xx); Apply (xx).  \n \nBy disjoint_aux it holds that \n  ( ∀ m n : ℕ,\n    m ≠ n ⇨ Disjoint U (C m) (C n)) (xx); Apply (xx).  \nQed."
    },
    {
      "type": "text",
      "text": "Next, we prove the additivity property itself. It is a rather long proof, so we split it into three parts, and give explanation in between. \n\nThe beginning is straightforward: we make all necessary assumptions, rewrite our goal and state two properties that we will use later. Then, we state a claim, proving which takes up most of the proof."
    },
    {
      "type": "code",
      "text": "Lemma additivity_meas : \n  ∀μ : (subset U → ℝ), is_measure_on F μ \n    ⇒ ∀ A B : subset U, A ∈ F ⇒ B ∈ F\n      ⇒ Disjoint _ A B  \n         ⇒ μ (A ∪ B) = μ A + μ B. \n\nProof. \nTake μ : (subset U ⇨ ℝ). \nAssume μ_is_measure_on_F. \nTake A B : (subset U). \nAssume A_in_F; Assume B_in_F.\nAssume A_B_disjoint.\nDefine C := (aux_seq A B).\nDefine seq_μC := (fun (n:ℕ) ↦ (μ (C n))).\nBy CU_aux_is_union it holds that \n  (A ∪ B = Countable_union C) (union_is_CU).\nWrite goal using (A ∪ B = Countable_union C)\n  as (μ (Countable_union C) = μ A + μ B).\nBy aux_additive it holds that \n  (infinite_sum seq_μC \n    (μ (Countable_union C))) (sum_meas_is_meas_CU).\n\nWe claim that (infinite_sum seq_μC \n  (μ A + μ B)) (series_is_sumAB). \nWe need to show that (\n   ∀ ε : ℝ, ε > 0\n    ⇒ ∃ N : ℕ ,\n       ∀ n : ℕ, (n ≥ N)%nat \n        ⇒ R_dist (sum_f_R0 seq_μC n) (μ A + μ B) < ε).\nTake ε : R; Assume ε_g0. "
    },
    {
      "type": "text",
      "text": "But proving this claim mostly comes down to the proof of a smaller claim.\nFor us it is obvious that (counting from 0, as WaterProof does) for $n ≥ 1$, it holds that $\\sum_{i=0}^{n} μ(C_i) = μ \\left(∪_{i=0}^{n} C_i \\right)$, since for larger $n$, $C_n$ is empty so neither the sum on the left nor the union on the right change. In Waterproof this is far from trivial, and proving this is the hard work of the proof."
    },
    {
      "type": "code",
      "text": "We claim that ( ∀ n : ℕ, (n ≥ 1)%nat \n  ⇒ R_dist (sum_f_R0 seq_μC n) \n    (μ A + μ B) < ε) (holds_for_ge_1).\nWe prove by induction on n. \n(* n=0: *)\nIt holds that (¬(0 ≥ 1)%nat) (not_0_geq_1). \nContradiction.\n(* induction step *)\nIt holds that ((n ≥ 0)%nat) (n_geq_0). \nBy geq_equiv it holds that \n  (n = 0%nat ∨ (n > 0)%nat) (n_0_or_n_g0).\nBecause n_0_or_n_g0 either n_0 or n_g0. \n(* n=1: *)\nIt holds that (S n = 1%nat) (Sn_is_1).\nWrite goal using (S n = 1%nat)\n  as ((1 ≥ 1)%nat \n  ⇒ R_dist (sum_f_R0 seq_μC 1) \n    (μ A + μ B) < ε).\nWrite goal using (sum_f_R0 seq_μC 1 = μ A + μ B)\n  as (R_dist (μ A + μ B) (μ A + μ B) < ε). \nBy R_dist_eq it holds that \n  (R_dist (μ A + μ B)  (μ A + μ B) = 0) (dist_is_0).\nIt follows that (R_dist (μ A + μ B) (μ A + μ B) < ε).\n(* n>1: *)\nIt holds that ((n ≥ 1)%nat) (n_geq_1).\nBy IHn it holds that \n  (R_dist (sum_f_R0 seq_μC n) (μ A + μ B) < ε) (dist_l_eps). \nWe claim that (seq_μC (S n) = 0) (µSn_0).\nBy aux_ge2_empty it holds that \n  (C (S n) = ∅) (CSn_empty).\nBy μ_is_measure_on_F it holds that \n  (μ ∅ = 0) (µ_empty_0). \nWe need to show that (μ (C (S n)) = 0).\nWrite goal using (C (S n) = ∅)\n  as (μ ∅ = 0).\nApply µ_empty_0. \n\nWrite goal using (sum_f_R0 seq_μC (S n)\n  = sum_f_R0 seq_μC n + seq_μC (S n))\n    as (R_dist (sum_f_R0 seq_μC n + seq_μC (S n)) \n      (μ A + μ B) < ε). \nWrite goal using (seq_μC (S n) = 0) \n  as (R_dist (sum_f_R0 seq_μC n + 0) (μ A + μ B) < ε).\nWrite goal using (sum_f_R0 seq_μC n + 0 = sum_f_R0 seq_μC n)\n  as (R_dist (sum_f_R0 seq_μC n ) (μ A + μ B) < ε).\nApply dist_l_eps.\n"
    },
    {
      "type": "text",
      "text": "Only now do we come back to the claim made in the first block of this proof. Once this is resolved, we know that $\\sum_{n=0}^{∞} μ (C_n) = μ \\left(∪_{n=0}^{∞} C_n \\right)$ (from earlier) and $\\sum_{n=0}^{∞} μ (C_n) = μ(A) + μ(B)$, from which  our rewritten goal immediately follows:"
    },
    {
      "type": "code",
      "text": "\nIt follows that (∃ N : ℕ ,\n  ∀ n : ℕ, (n ≥ N)%nat \n    ⇒ R_dist (sum_f_R0 seq_μC n) \n      (μ A + μ B) < ε). \nBy uniqueness_sum it holds that \n  (μ (Countable_union C) = μ A + μ B) (xx); Apply (xx). \nQed."
    },
    {
      "type": "text",
      "text": "### From  additivity to finite additivity\n\nHaving proven additivity for two sets, we now consider an arbitrary number of sets, and prove that the property still holds. We do this by induction, using the additivity result proven above. "
    },
    {
      "type": "code",
      "text": "Lemma finite_additivity_meas : \n  ∀ μ : (subset U → ℝ), is_measure_on F μ \n    ⇒ ∀ C : (ℕ → (subset U)), (∀n : ℕ, C n ∈ F) \n      ⇒ (∀ m n : ℕ, m ≠ n ⇒ Disjoint _ (C m) (C n))  \n         ⇒ ∀ N : ℕ,  μ (finite_union_up_to C (S N))\n          = sum_f_R0 (fun (n : ℕ) ↦ (μ (C n))) N.\n\nProof. \nTake μ : (subset U ⇨ ℝ). \nAssume μ_is_measure_on_F. \nTake C : (ℕ ⇨ subset U).\nAssume all_Cn_in_F.  \nAssume C_n_disjoint. \nDefine seq_μC := (fun (n : ℕ) ↦ μ (C n)). \nDefine FU_C := (finite_union_up_to C). \nTake N : ℕ.\nWe prove by induction on N. \n(* Base case: *)\nBy FU_up_to_1_is_0 it holds that \n  (finite_union_up_to C 1 = C 0%nat) (FU1_is_C0).\nWrite goal using (FU_C 1%nat = C 0%nat)\n  as (μ (C 0%nat) = sum_f_R0 seq_μC 0%nat).\nIt holds that (μ (C 0%nat) = sum_f_R0 seq_μC 0). \n(*Induction step: *)\nIt holds that (sum_f_R0 seq_μC (S N) \n  = sum_f_R0 seq_μC N + seq_μC (S N)) (sum_to_sum).\nWrite goal using (sum_f_R0 seq_μC (S N) \n  = sum_f_R0 seq_μC N + seq_μC (S N)) \n    as (μ (FU_C (S (S N)))\n      = sum_f_R0 seq_μC N + seq_μC (S N)). \n\nBy FU_S_as_union it holds that \n  (FU_C (S (S N)) \n    = (FU_C (S N)) ∪ (C (S N))) (FU_to_union). \nWe claim that (Disjoint _ \n  (FU_C (S N)) (C (S N))) (FUSn_CSn_disj). \nWe argue by contradiction. \nBy H it holds that (∃ x : U, \n  x ∈ ((FU_C (S N)) ∩ (C (S N)))) (int_not_empty).\nChoose x such that x_in_int \n  according to int_not_empty. \ndestruct x_in_int. (*how to destruct with certain names?*)\nChoose n0 such that x_in_Cn \n  according to H0.\nIt holds that (x ∈ C n0 ∧ x ∈ C (S N)) (x_in_Cn0_and_CSN). \nBy C_n_disjoint it holds that \n  (Disjoint _ (C n0) (C (S N))) (Cn0_CSN_disj). \ndestruct Cn0_CSN_disj. \nIt holds that (x ∉ C n0 ∩ C (S N)) (not_x_in_int_Cn0_CSN).\nBy not_x_in_int_Cn0_CSN it holds that \n  (¬ (x ∈ C n0 ∧ x ∈ C (S N))) (not_x_in_Cn0_and_CSN).\nContradiction. \n(*now show: both sets in F *)\nIt holds that (C (S N) ∈ F) (CSN_in_F). \nBy FU_in_σ it holds that \n  (FU_C (S N) ∈ F) (FU_C_in_F). \n  \nBy additivity_meas it holds that\n  (μ ((FU_C (S N)) ∪ (C (S N))) \n    = μ (FU_C (S N)) + μ (C (S N))) (muFUS_is_muFU_muS).\n\nWrite goal using (FU_C (S (S N)) \n  = (FU_C (S N)) ∪ (C (S N)))\n    as (μ ((FU_C (S N)) ∪ (C (S N))) \n      = sum_f_R0 seq_μC N + seq_μC (S N)).\nWrite goal using (μ ((FU_C (S N)) ∪ (C (S N))) \n  = μ (FU_C (S N)) + μ (C (S N)))\n    as (μ (FU_C (S N)) + μ (C (S N)) \n      = sum_f_R0 seq_μC N + seq_μC (S N)). \nIt holds that (μ (FU_C (S N)) + μ (C (S N)) \n  = sum_f_R0 seq_μC N + seq_μC (S N)). \nQed.\n\n\n"
    },
    {
      "type": "text",
      "text": "## The continuity lemma"
    },
    {
      "type": "text",
      "text": "Now we are ready to prove our main result."
    },
    {
      "type": "code",
      "text": "Lemma incr_cont_meas : \n  ∀μ : (subset U → ℝ), is_measure_on F μ \n    ⇒ ∀C : (ℕ → (subset U)), is_increasing_seq_sets C\n      ⇒ (∀ n : ℕ, C n ∈ F)\n        ⇒ Un_cv (fun (n : ℕ) ↦ (μ (C n))) (μ (Countable_union C)). \n(*Un_cv Cn l is the proposition 'sequence Cn converges to limit l'*)\n\nProof. \nTake μ : (subset U ⇨ ℝ). \nAssume μ_is_measure_on_F. \nTake C : (ℕ ⇨ subset U) . \nAssume C_is_incr_seq.\nAssume all_Cn_in_F.\nDefine D := (disjoint_seq C). \nDefine seq_μC := (fun (n : ℕ) ↦ μ (C n)). \nDefine seq_μD := (fun (n : ℕ) ↦ μ (D n)).\nBy CU_sets_disjointsets_equal it holds that \n  ((Countable_union C) = (Countable_union D)) (CUC_is_CUD).\nWrite goal using \n  ((Countable_union C) = (Countable_union D)) \n    as (Un_cv seq_μC (μ (Countable_union D))). \nBy μ_is_measure_on_F it holds that \n  (μ is_σ-additive_on F) (μ_is_σ_additive). \nBy disj_seq_disjoint it holds that \n  (∀ m n : ℕ, m ≠ n ⇒ Disjoint _ (D m) (D n)) (D_disj). \nBy disj_seq_in_F it holds that \n  (∀n : ℕ, D n ∈ F) (all_Dn_in_F).\nBy μ_is_σ_additive it holds that \n  (infinite_sum (fun (n:ℕ) ↦ (μ (D n))) \n    (μ (Countable_union D))) (μDn_is_μCUD).\n\nWe need to show that (\n  ∀ ε : ℝ, ε > 0\n    ⇒ ∃ N : ℕ , ∀ n : ℕ,  (n ≥ N)%nat \n      ⇒ R_dist (μ (C n)) (μ (Countable_union D)) < ε).\nTake ε : ℝ; Assume ε_g0. \nBy μDn_is_μCUD it holds that (\n  ∃ N : ℕ , ∀ n : ℕ,  (n ≥ N)%nat \n    ⇒ R_dist (sum_f_R0 seq_μD n)\n     (μ (Countable_union D)) < ε) (exists_N_μSumD_μCUD_l_ε).\nChoose N such that μSumN_μCU_l_ε \n  according to exists_N_μSumD_μCUD_l_ε.\n\nWe claim that (∀ n : ℕ,\n  (n ≥ N)%nat ⇨ R_dist (μ (C n)) \n    (μ (Countable_union D)) < ε) (holds_forall_n_geq_N). \nTake n : ℕ; Assume n_geq_N.\nWe claim that (μ(C n) = \n  (sum_f_R0 seq_μD n) ) (μCn_is_sum_μDn). \nBy FUn_disj_is_Cn it holds that \n  (finite_union_up_to D (S n) = C n) (FUD_is_C).\nWrite goal using (C n = finite_union_up_to D (S n))\n  as (μ (finite_union_up_to D (S n)) \n    = sum_f_R0 seq_μD n). \nBy finite_additivity_meas it holds that \n  (μ (finite_union_up_to D (S n)) \n    = sum_f_R0 (fun (n : ℕ) ↦ μ (D n)) n) (xx); Apply xx. \n\nWrite goal using (μ (C n) = sum_f_R0 seq_μD n) \n  as (R_dist (sum_f_R0 ｛ n0 : ℕ | μ (D n0) ｝ n) \n    (μ (Countable_union D)) < ε).\nIt holds that (R_dist (sum_f_R0 seq_μD n) \n  (μ (Countable_union D)) < ε). \nIt follows that (∃ N0 : ℕ ,\n   ∀ n : ℕ, (n ≥ N0)%nat \n    ⇒ R_dist (μ (C n)) (μ (Countable_union D)) < ε). \nQed. "
    }
  ]
}