{
  "exerciseSheet": false,
  "blocks": [
    {
      "type": "text",
      "text": "# Sets & sequences\nIn this document, we state and prove lemmas that have to do with sets, collections of sets and sequences of sets. : \n\n\n## Basic lemmas about sets\nWe start of with some simple statements on relatively simple sets:"
    },
    {
      "type": "code",
      "text": "Require Import wplib.Notations.SetNotations.\nRequire Import wplib.Lib.measure_theory.\nRequire Import Sets.Ensembles.\nRequire Import Sets.Classical_sets.\nRequire Import wplib.Tactics.Tactics.\nRequire Import wplib.Tactics.TacticsContra.\nRequire Import Sets.Powerset.\nRequire Import Logic. \nRequire Import ClassicalFacts. \nRequire Import Omega. \nRequire Import Coq.Arith.Wf_nat. \n\nNotation \"'U'\" := SetNotations.U.\n(*We do not want this, but otherwise notations \n  such as Ω and ∅ do not work. How to fix? *)\n\n\nLemma complement_full_is_empty : \n  ∅ = (Ω \\ Ω). \n\nProof. \nWe prove equality by proving two inclusions. \nTake x : U. \nAssume x_in_empty.\nContradiction. \n\nTake x : U; Assume x_in_complement_full.\nBecause x_in_complement_full \n  both x_in_full and not_x_in_full. \nContradiction. \nQed.\n\n\nLemma setminus_empty : \n  ∀ A : subset U, A \\ ∅ = A. \n\nProof. \nTake A : (subset U). \nWe prove equality by proving two inclusions.\nTake x : U; Assume x_in_A_wo_empty. \nIt holds that (x ∈ A). \n\nTake x : U; Assume x_in_A. \nIt holds that (x ∈ (A \\ ∅)). \nQed. \n\n\nLemma intersection_full : \n  ∀ A : subset U, (Ω ∩ A) = A. \n\nProof. \nTake A : (subset U). \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_intersection. \ndestruct x_in_intersection. \nIt holds that (x ∈ A). \n\nTake x : U; Assume x_in_A. \nIt holds that (x ∈ Ω) (x_in_omega). \nIt follows that (x ∈ (Ω ∩ A)). \nQed. \n\n\nLemma intersection_empty : \n  ∀ A : subset U, (A ∩ ∅) = ∅. \n\nProof. \nTake A : (subset U). \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_intersection. \ndestruct x_in_intersection. \nContradiction. \n\nTake x : U; Assume x_in_empty. \nContradiction. \nQed. \n\n\nLemma empty_disjoint : \n  ∀ A : subset U, Disjoint _ A ∅. \n\nProof. \nTake A : (subset U).\nIt suffices to show that (∀ x:U, x ∉ (A ∩ ∅)).\nTake x : U. \nBy intersection_empty it holds that \n  ((A ∩ ∅) = ∅) (int_empty). \nWrite goal using ((A ∩ ∅) = ∅) as (x ∉ ∅). \nIt holds that (x ∉ ∅). \nQed. \n\nLemma intersection_symmetric : \n  ∀ A B : subset U, A ∩ B = B ∩ A. \n\nProof. \nTake A B : (subset U). \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_AB. \ndestruct x_in_AB. \nIt holds that (x ∈ (B ∩ A)). \n\nTake x : U; Assume x_in_BA. \ndestruct x_in_BA. \nIt holds that (x ∈ (A ∩ B)). \nQed. \n\n\nLemma disjoint_symmetric : \n  ∀ A B : subset U, (Disjoint _ A B) ⇒ (Disjoint _ B A). \n\nProof. \nTake A B : (subset U). \nAssume A_B_disjoint. \ndestruct A_B_disjoint.\nBy intersection_symmetric it holds that \n  ((A ∩ B) = (B ∩ A)) (AB_is_BA).\nWrite H using ((A ∩ B) = (B ∩ A)) \n  as (∀ x : U, x ∉ (B ∩ A)). \nIt follows that (Disjoint U B A). \nQed. \n(*include last two in library? Should be trivial. *)\n\nLemma union_to_or : \n  ∀ A B : (subset U), ∀ x : U, \n    x ∈ (A ∪ B) ⇒ (x ∈ A ∨ x ∈ B).\n\nProof. \nTake A B : (subset U). \nTake x : U; Assume x_in_union. \ndestruct x_in_union. \n(* x ∈ A: *)\nIt follows that (x ∈ A ∨ x ∈ B).\n(* x ∈ B: *) \nIt follows that (x ∈ A ∨ x ∈ B). \nQed. \n\n\nLemma not_in_comp : \n  ∀ A : subset U, ∀ x : U, \n    x ∉ (Ω \\ A) ⇒ x ∈ A.\n\nProof. \nTake A : (subset U); Take x : U. \nAssume x_not_in_complement. \nWe argue by contradiction. \nIt holds that (x ∈ (Ω \\ A)) (x_in_complement).\nContradiction. \nQed. \n\n\nLemma complement_as_intersection : \n  ∀ A B : subset U, \n    A \\ B = (Ω \\ B) ∩ A. \n\nProof. \nTake A B : (subset U). \nWe prove equality by proving two inclusions. \n\nTake x : U. \nAssume x_in_A_without_B. \nIt holds that (x ∈ ((Ω \\ B) ∩ A)). \n\nTake x : U. \nAssume x_in_rhs. \nBy x_in_rhs it holds that \n  (x ∈ (Ω \\ B) ∧ (x ∈ A)) (x_in_A_and_comp_B). \nIt holds that (x ∈ (A \\ B)). \nQed. "
    },
    {
      "type": "text",
      "text": "The following two lemmas should follow immediately, but need to be stated explicitly in order for the proofs ... to work (improvement for library?)"
    },
    {
      "type": "code",
      "text": "Lemma neq_equiv : ∀ x y : ℕ,\n  (x ≠ y) ⇒ ((x < y) ∨ (x > y)).\n\nProof. \nintros x y. omega.\nQed. \n\n\nLemma leq_equiv : ∀ x y : ℕ,\n  (x <= y) ⇒ (x < y ∨ x = y).\n\nProof. \nintros x y. omega. \nQed. \n"
    },
    {
      "type": "text",
      "text": "## Sequences of sets\nNext, we turn to sequences of sets and some of their properties. "
    },
    {
      "type": "code",
      "text": "Definition disjoint_seq (C : (ℕ ⇨ subset U)) \n  : (ℕ ⇨ subset U) := \n    fun (n : ℕ) ↦ (C n \\ (finite_union_up_to C n)). "
    },
    {
      "type": "text",
      "text": "That this sequence is disjoint and that the countable union of this sequence is equal to that of the original sequence is proven in `disj_seq_disjoint` and `CU_sets_disjointsets_equal` respectively. First, we prove a smaller result that we will need in these proofs: "
    },
    {
      "type": "code",
      "text": "Lemma FU_up_to_0_empty : \n  ∀ C : (ℕ ⇨ subset U), finite_union_up_to C 0 = ∅. \n\nProof. \nTake C : (ℕ ⇨ subset U). \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_FU_0. \nWrite x_in_FU_0 as \n  (x ∈ ｛x : U | ∃ i : ℕ , i < 0 ∧ x ∈ C i｝). \nIt holds that (¬(∃i : ℕ, i<0 ∧ x ∈ C i)) (no_N_l_0). \nContradiction.\n\nTake x : U; Assume x_in_empty. \nContradiction. \nQed.\n\n\nLemma disj_seq_disjoint : \n  ∀ C : ((ℕ ⇨ subset U)), \n    (∀ m n : ℕ, m ≠ n ⇒ Disjoint _ \n      (disjoint_seq C m) (disjoint_seq C n)). \n\nProof. \nTake C : ((ℕ ⇨ subset U)). \nTake m n : ℕ. \nAssume m_neq_n.\nBy neq_equiv it holds that \n  (m ≠ n ⇒ (m < n) ∨ (m > n)) (m_l_g_n).\nIt holds that ((m < n) ∨ (m > n)) (m_lg_n). \nWe argue by contradiction. \nIt holds that (∃ x : U, \n  x ∈ ((disjoint_seq C m) ∩ (disjoint_seq C n))) (int_not_empty).\nChoose x such that x_in_int according to int_not_empty.\nBy x_in_int it holds that \n  (x ∈ disjoint_seq C m \n    ∧ x ∈ disjoint_seq C n) (x_in_m_and_n). \nBy x_in_m_and_n it holds that \n  (x ∈ disjoint_seq C m) (x_in_m). \nBy x_in_m_and_n it holds that \n  (x ∈ disjoint_seq C n) (x_in_n). \nIt holds that \n  ((x ∉ finite_union_up_to C m) \n    ∧ (x ∉ finite_union_up_to C m)) (x_not_in_FU_mn).\nIt holds that \n  (¬(∃i : ℕ,  (i < m ∧ x ∈ (C i)))\n    ∧ ¬(∃i : ℕ,  (i < n ∧ x ∈ (C i)))) (no_i).\nBecause no_i both no_i_m and no_i_n. \nBecause m_lg_n either m_l_n or m_g_n. \n(* m < n: *)\nBy no_i_m it holds that ((x ∉  C m)) (x_not_in_Cm). \nBy x_in_m it holds that (x ∈ C m) (x_in_Cm).\nContradiction. \n(* m > n: *)\nBy no_i_n it holds that ((x ∉ C n)) (x_not_in_Cn). \nBy x_in_m it holds that (x ∈ C n) (x_in_Cn).\nContradiction.  \nQed. \n\n\nLemma CU_sets_disjointsets_equal : \n  ∀ C : ((ℕ ⇨ subset U)), \n    Countable_union (disjoint_seq C) = Countable_union C.\n\nProof. \nTake C : ((ℕ ⇨ subset U)).\nDefine D := (disjoint_seq C). \nWe prove equality by proving two inclusions. \n\n(* CU disjoint sets in CU C: *)\nTake x : U; Assume x_in_CU_D. \nIt holds that (x ∈ Countable_union C). \n\n(* CU C in CU disjoint sets: *)\nTake x : U; Assume x_in_CU_C. \n(*now choose minimal n such that x is in disj_C n*)\nChoose n such that x_in_C_n according to x_in_CU_C.\nDefine aux_prop := (fun (n : ℕ) ↦ (x ∈ C n)).\nBy classic it holds that \n  (∀ n, aux_prop n ∨ ¬aux_prop n) (aux_prop_decidable). \nBy dec_inh_nat_subset_has_unique_least_element it holds that\n  (has_unique_least_element le aux_prop) (exists_least_n). \nChoose n1 such that x_in_C_minimal_n according to exists_least_n. \n\nIt holds that (x ∈ Countable_union D). \nQed. \n\n"
    },
    {
      "type": "code",
      "text": "Definition disjoint_seq (C : (ℕ ⇨ subset U)) \n  : (ℕ ⇨ subset U) := \n    fun (n : ℕ) ↦ (C n \\ (finite_union_up_to C n)). "
    },
    {
      "type": "text",
      "text": "That this sequence is disjoint and that the countable union of this sequence is equal to that of the original sequence is proven in `disj_seq_disjoint` and `CU_sets_disjointsets_equal` respectively. First, we prove a smaller result that we will need in these proofs: "
    },
    {
      "type": "code",
      "text": "Lemma FU_up_to_0_empty : \n  ∀ C : (ℕ ⇨ subset U), finite_union_up_to C 0 = ∅. \n\nProof. \nTake C : (ℕ ⇨ subset U). \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_FU_0. \nWrite x_in_FU_0 as \n  (x ∈ ｛x : U | ∃ i : ℕ , i < 0 ∧ x ∈ C i｝). \nIt holds that (¬(∃i : ℕ, i<0 ∧ x ∈ C i)) (no_N_l_0). \nContradiction.\n\nTake x : U; Assume x_in_empty. \nContradiction. \nQed.\n\n\nLemma disj_seq_disjoint : \n  ∀ C : ((ℕ ⇨ subset U)), \n    (∀ m n : ℕ, m ≠ n ⇒ Disjoint _ \n      (disjoint_seq C m) (disjoint_seq C n)). \n\nProof. \nTake C : ((ℕ ⇨ subset U)). \nTake m n : ℕ. \nAssume m_neq_n.\nBy neq_equiv it holds that \n  (m ≠ n ⇒ (m < n) ∨ (m > n)) (m_l_g_n).\nIt holds that ((m < n) ∨ (m > n)) (m_lg_n). \nWe argue by contradiction. \nIt holds that (∃ x : U, \n  x ∈ ((disjoint_seq C m) ∩ (disjoint_seq C n))) (int_not_empty).\nChoose x such that x_in_int according to int_not_empty.\nBy x_in_int it holds that \n  (x ∈ disjoint_seq C m \n    ∧ x ∈ disjoint_seq C n) (x_in_m_and_n). \nBy x_in_m_and_n it holds that \n  (x ∈ disjoint_seq C m) (x_in_m). \nBy x_in_m_and_n it holds that \n  (x ∈ disjoint_seq C n) (x_in_n). \nIt holds that \n  ((x ∉ finite_union_up_to C m) \n    ∧ (x ∉ finite_union_up_to C m)) (x_not_in_FU_mn).\nIt holds that \n  (¬(∃i : ℕ,  (i < m ∧ x ∈ (C i)))\n    ∧ ¬(∃i : ℕ,  (i < n ∧ x ∈ (C i)))) (no_i).\nBecause no_i both no_i_m and no_i_n. \nBecause m_lg_n either m_l_n or m_g_n. \n(* m < n: *)\nBy no_i_m it holds that ((x ∉  C m)) (x_not_in_Cm). \nBy x_in_m it holds that (x ∈ C m) (x_in_Cm).\nContradiction. \n(* m > n: *)\nBy no_i_n it holds that ((x ∉ C n)) (x_not_in_Cn). \nBy x_in_m it holds that (x ∈ C n) (x_in_Cn).\nContradiction.  \nQed. \n\n\nLemma CU_sets_disjointsets_equal : \n  ∀ C : ((ℕ ⇨ subset U)), \n    Countable_union (disjoint_seq C) = Countable_union C.\n\nProof. \nTake C : ((ℕ ⇨ subset U)).\nDefine D := (disjoint_seq C). \nWe prove equality by proving two inclusions. \n\n(* CU disjoint sets in CU C: *)\nTake x : U; Assume x_in_CU_D. \nIt holds that (x ∈ Countable_union C). \n\n(* CU C in CU disjoint sets: *)\nTake x : U; Assume x_in_CU_C. \n(*now choose minimal n such that x is in disj_C n*)\nChoose n such that x_in_C_n according to x_in_CU_C.\nDefine aux_prop := (fun (n : ℕ) ↦ (x ∈ C n)).\nBy classic it holds that \n  (∀ n, aux_prop n ∨ ¬aux_prop n) (aux_prop_decidable). \nBy dec_inh_nat_subset_has_unique_least_element it holds that\n  (has_unique_least_element le aux_prop) (exists_least_n). \nChoose n1 such that x_in_C_minimal_n according to exists_least_n. \n\nIt holds that (x ∈ Countable_union D). \nQed. \n"
    },
    {
      "type": "code",
      "text": "Lemma FU_S_as_union : \n  ∀ C : (ℕ → (subset U)), ∀ n : ℕ,\n    finite_union_up_to C (S n) \n      = (finite_union_up_to C n) ∪ (C n). \n\nProof. \nTake C : (ℕ → (subset U)). \nTake n : ℕ. \nWe prove equality by proving two inclusions. \nTake x : U; Assume x_in_FU_S. \nChoose n0 such that x_in_C_n0 according to x_in_FU_S.\nIt holds that (n0 <= n) (n0_le_n). (*avoid %nat? *) \nBy leq_equiv it holds that \n  (n0 < n ∨ n0 = n) (n0_l_e_n).\nBecause  n0_l_e_n either n0_l_n or n0_is_n. \n(*n0 < n*)\nIt holds that (x ∈ (finite_union_up_to C n)) (x_in_FU). \nIt holds that (x ∈ (finite_union_up_to C n ∪ C n)). \n(*n0 = n*)\nWrite goal using (n = n0) as \n  (x ∈ (finite_union_up_to C n0 ∪ C n0)). \nIt holds that (x ∈ C n0) (x_in_Cn0).\nIt holds that ( x ∈ (finite_union_up_to C n0 ∪ C n0)). \n\nTake x : U; Assume x_in_FU_with_Cn. \nBy union_to_or it holds that \n  ((x ∈ (finite_union_up_to C n)) ∨ (x ∈ C n)) (x_in_FU_or_Cn).\nIt holds that (x ∈ finite_union_up_to C (S n)). \nQed. "
    }
  ]
}